/**
* Toggle button
*
* @usage
*  ### Active and Inactive text should be provided as data attributes:
*  <button type="button" class="project-feature-toggle" data-enabled-text="Enabled" data-disabled-text="Disabled">
*  <i class="fa fa-spinner fa-spin loading-icon hidden"></i>
*  </button>

*  ### Checked should have `is-checked` class
*  <button type="button" class="project-feature-toggle is-checked" data-enabled-text="Enabled" data-disabled-text="Disabled">
*  <i class="fa fa-spinner fa-spin loading-icon hidden"></i>
*  </button>

*  ### Disabled should have `is-disabled` class
*  <button type="button" class="project-feature-toggle is-disabled" data-enabled-text="Enabled" data-disabled-text="Disabled" disabled="true">
*  <i class="fa fa-spinner fa-spin loading-icon hidden"></i>
*  </button>

*  ### Loading should have `is-loading` and an icon with `loading-icon` class
*  <button type="button" class="project-feature-toggle is-loading" data-enabled-text="Enabled" data-disabled-text="Disabled">
*  <i class="fa fa-spinner fa-spin loading-icon"></i>
*  </button>
*/
.project-feature-toggle {
  position: relative;
  border: 0;
  outline: 0;
  display: block;
  width: 100px;
  height: 24px;
  cursor: pointer;
  user-select: none;
  background: $feature-toggle-color-disabled;
  border-radius: 12px;
  padding: 3px;
  transition: all .4s ease;

  &::selection,
  &::before::selection,
  &::after::selection {
    background: none;
  }

  &::before {
    color: $feature-toggle-text-color;
    font-size: 12px;
    line-height: 24px;
    position: absolute;
    top: 0;
    left: 25px;
    right: 5px;
    text-align: center;
    overflow: hidden;
    text-overflow: ellipsis;
    animation: animate-disabled .2s ease-in;
    content: attr(data-disabled-text);
  }

  &::after {
    position: relative;
    display: block;
    content: "";
    width: 22px;
    height: 18px;
    left: 0;
    border-radius: 9px;
    background: $feature-toggle-color;
    transition: all .2s ease;
  }

  .loading-icon {
    display: none;
    font-size: 12px;
    color: $white-light;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

  }

  &.is-loading {
    &::before {
      display: none;
    }

    .loading-icon {
      display: block;

      &::before {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
    }
  }

  &.is-checked {
    background: $feature-toggle-color-enabled;

    &::before {
      left: 5px;
      right: 25px;
      animation: animate-enabled .2s ease-in;
      content: attr(data-enabled-text);
    }

    &::after {
      left: calc(100% - 22px);
    }
  }

  &.is-disabled {
    opacity: 0.4;
    cursor: not-allowed;
  }

  @media (max-width: $screen-xs-min) {
    width: 50px;

    &::before,
    &.is-checked::before {
      display: none;
    }
  }

  @keyframes animate-enabled {
    0%, 35% { opacity: 0; }
    100% { opacity: 1; }
  }

  @keyframes animate-disabled {
    0%, 35% { opacity: 0; }
    100% { opacity: 1; }
  }
}
