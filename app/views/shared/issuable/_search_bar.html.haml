- type = local_assigns.fetch(:type)
- block_css_class = type != :boards_modal ? 'row-content-block second-block' : ''
- full_path = @project.present? ? @project.full_path : @group.full_path

.issues-filters
  .issues-details-filters.filtered-search-block{ class: block_css_class, "v-pre" => type == :boards_modal }
    = form_tag page_filter_path(without: [:assignee_id, :author_id, :milestone_title, :label_name, :search]), method: :get, class: 'filter-form js-filter-form' do
      - if params[:search].present?
        = hidden_field_tag :search, params[:search]
      - if @can_bulk_update
        .check-all-holder.hidden
          = check_box_tag "check-all-issues", nil, false, class: "check-all-issues left"
      .issues-other-filters.filtered-search-wrapper
        .filtered-search-box
          - if type != :boards_modal && type != :boards
            = dropdown_tag(custom_icon('icon_history'),
              options: { wrapper_class: "filtered-search-history-dropdown-wrapper",
              toggle_class: "filtered-search-history-dropdown-toggle-button",
              dropdown_class: "filtered-search-history-dropdown",
              content_class: "filtered-search-history-dropdown-content",
              title: "Recent searches" }) do
              .js-filtered-search-history-dropdown{ data: { full_path: full_path } }
          .filtered-search-box-input-container.droplab-dropdown
            .scroll-container
              %ul.tokens-container.list-unstyled
                %li.input-token
                  %input.form-control.filtered-search{ search_filter_input_options(type) }
            #js-dropdown-hint.filtered-search-input-dropdown-menu.dropdown-menu.hint-dropdown
              %ul{ data: { dropdown: true } }
                %li.filter-dropdown-item{ data: { action: 'submit' } }
                  %button.btn.btn-link
                    = icon('search')
                    %span
                      Press Enter or click to search
              %ul.filter-dropdown{ data: { dynamic: true, dropdown: true } }
                %li.filter-dropdown-item
                  %button.btn.btn-link
                    -# Encapsulate static class name `{{icon}}` inside #{} to bypass
                    -# haml lint's ClassAttributeWithStaticValue
                    %i.fa{ class: "#{'{{icon}}'}" }
                    %span.js-filter-hint
                      {{hint}}
                    %span.js-filter-tag.dropdown-light-content
                      {{tag}}
            #js-dropdown-author.filtered-search-input-dropdown-menu.dropdown-menu
              - if current_user
                %ul{ data: { dropdown: true } }
                  = render 'shared/issuable/user_dropdown_item',
                    user: current_user
              %ul.filter-dropdown{ data: { dynamic: true, dropdown: true } }
                = render 'shared/issuable/user_dropdown_item',
                  user: User.new(username: '{{username}}', name: '{{name}}'),
                  avatar: { lazy: true, url: '{{avatar_url}}' }
            #js-dropdown-assignee.filtered-search-input-dropdown-menu.dropdown-menu
              %ul{ data: { dropdown: true } }
                %li.filter-dropdown-item{ data: { value: 'none' } }
                  %button.btn.btn-link
                    No Assignee
                %li.divider.droplab-item-ignore
                - if current_user
                  = render 'shared/issuable/user_dropdown_item',
                    user: current_user
              %ul.filter-dropdown{ data: { dynamic: true, dropdown: true } }
                = render 'shared/issuable/user_dropdown_item',
                  user: User.new(username: '{{username}}', name: '{{name}}'),
                  avatar: { lazy: true, url: '{{avatar_url}}' }
            #js-dropdown-milestone.filtered-search-input-dropdown-menu.dropdown-menu
              %ul{ data: { dropdown: true } }
                %li.filter-dropdown-item{ data: { value: 'none' } }
                  %button.btn.btn-link
                    No Milestone
                %li.filter-dropdown-item{ data: { value: 'upcoming' } }
                  %button.btn.btn-link
                    Upcoming
                %li.filter-dropdown-item{ 'data-value' => 'started' }
                  %button.btn.btn-link
                    Started
                %li.divider.droplab-item-ignore
              %ul.filter-dropdown{ data: { dynamic: true, dropdown: true } }
                %li.filter-dropdown-item
                  %button.btn.btn-link.js-data-value
                    {{title}}
            #js-dropdown-label.filtered-search-input-dropdown-menu.dropdown-menu
              %ul{ data: { dropdown: true } }
                %li.filter-dropdown-item{ data: { value: 'none' } }
                  %button.btn.btn-link
                    No Label
                %li.divider.droplab-item-ignore
              %ul.filter-dropdown{ data: { dynamic: true, dropdown: true } }
                %li.filter-dropdown-item
                  %button.btn.btn-link
                    %span.dropdown-label-box{ style: 'background: {{color}}' }
                    %span.label-title.js-data-value
                      {{title}}
            #js-dropdown-my-reaction.filtered-search-input-dropdown-menu.dropdown-menu
              %ul.filter-dropdown{ data: { dynamic: true, dropdown: true } }
                %li.filter-dropdown-item
                  %button.btn.btn-link
                    %gl-emoji
                    %span.js-data-value.prepend-left-10
                      {{name}}
          %button.clear-search.hidden{ type: 'button' }
            = icon('times')
        .filter-dropdown-container
          - if type == :boards
            - if can?(current_user, :admin_list, board.parent)
              .dropdown.prepend-left-10#js-add-list
                %button.btn.btn-create.btn-inverted.js-new-board-list{ type: "button", data: board_list_data }
                  Add list
                .dropdown-menu.dropdown-menu-paging.dropdown-menu-align-right.dropdown-menu-issues-board-new.dropdown-menu-selectable
                  = render partial: "shared/issuable/label_page_default", locals: { show_footer: true, show_create: true, show_boards_content: true, title: "Add list" }
                  - if can?(current_user, :admin_label, board.parent)
                    = render partial: "shared/issuable/label_page_create"
                  = dropdown_loading
              - if @project
                #js-add-issues-btn.prepend-left-10{ data: { can_admin_list: can?(current_user, :admin_list, @project) } }
          - elsif type != :boards_modal
            = render 'shared/sort_dropdown'
